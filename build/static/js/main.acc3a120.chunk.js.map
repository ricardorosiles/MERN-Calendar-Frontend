{"version":3,"sources":["types/types.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","hooks/useForm.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PublicRoute.js","router/PrivateRoute.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","modalOpen","events","activeEvent","checking","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","prepareEvents","end","moment","toDate","start","eventAddNew","event","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","console","log","Navbar","useSelector","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PublicRoute","isAuthenticated","Component","component","rest","props","to","PrivateRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.acc3a120.chunk.js","sourcesContent":["\nexport const types = {\n\n    uiOpenModal: '[ui] Open modal',\n    uiCloseModal: '[ui] Close modal',\n\n\n    eventSetActive: '[event] Set Active',\n    eventLogout: '[event] Event Clear',\n    eventAddNew: '[event] Add new',\n    eventStartNew: '[event] Start event new',\n    eventClearActiveEvent: '[event] Clear active event',\n    eventUpdated: '[event] Event updated',\n    eventDeleted: '[event] Event deleted',\n    eventLoaded: '[event] Events loaded',\n\n\n    authCheckingFinish: '[auth] Finish checking login state',\n    authStartLogin: '[auth] Start login',\n    authLogin: '[auth] Login',\n    authStartRegister: '[auth] Start Register',\n    authStartStartTokenRenew: '[auth] Start token renew',\n    authLogout: '[auth] Logout',\n\n\n\n\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n    modalOpen: false,\n}\n\n\n\nexport const uiReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        case types.uiOpenModal:\n            return {\n                ...state,\n                modalOpen: true\n            }\n\n        case types.uiCloseModal:\n            return {\n                ...state,\n                modalOpen: false\n            }\n    \n        default:\n            return state;\n    }\n\n\n}","import { types } from '../types/types';\n\nconst initialState = {\n    events: [{}],\n    activeEvent: null\n};\n\n\nexport const calendarReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case types.eventSetActive:\n            return {\n                ...state,\n                activeEvent: action.payload\n            }\n\n        case types.eventAddNew:\n            return {\n                ...state,\n                events: [\n                    ...state.events,\n                    action.payload\n                ]\n            }\n\n        case types.eventClearActiveEvent:\n            return {\n                ...state,\n                activeEvent: null\n            }\n\n\n        case types.eventUpdated:\n            return {\n                ...state,\n                events: state.events.map(\n                    e => (e.id === action.payload.id) ? action.payload : e\n                )\n            }\n\n        case types.eventDeleted:\n            return {\n                ...state,\n                events: state.events.filter(\n                    e => (e.id !== state.activeEvent.id)\n                ),\n                activeEvent: null\n            }\n\n        case types.eventLoaded:\n            return {\n                ...state,\n                events: [...action.payload]\n            }\n        case types.eventLogout:\n            return {\n                ...initialState\n\n            }\n\n        default:\n            return state;\n    }\n\n\n}\n","import { types } from '../types/types';\n\nconst initialState = {\n    checking: true,\n    // uid: null,\n    // name: null\n}\n\nexport const authReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case types.authLogin:\n            return {\n                ...state,\n                ...action.payload,\n                checking: false\n            }\n\n        case types.authCheckingFinish:\n            return {\n                ...state,\n                checking: false\n            }\n\n        case types.authLogout:\n            return {\n                checking: false\n            }\n\n\n\n        default:\n            return state;\n    }\n\n}\n\n\n","import { combineReducers } from 'redux';\n\nimport { uiReducer } from './uiReducer';\nimport { calendarReducer } from './calendarReducer';\nimport { authReducer } from './authReducer';\n\n\n\nexport const rootReducer = combineReducers({\n    ui: uiReducer,\n    calendar: calendarReducer,\n    auth: authReducer\n})\n\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk'\n\nimport { rootReducer } from '../reducers/rootReducer';\n\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    )\n);\n\n\n","import { useState } from 'react';\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues( initialState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}","const baseUrl = process.env.REACT_APP_API_URL;\n\nconst fetchSinToken = ( endpoint, data, method = 'GET' ) => {\n\n    const url = `${ baseUrl }/${ endpoint }`;\n\n    if ( method === 'GET' ) {\n        return fetch( url );\n    } else {\n        return fetch( url, {\n            method,\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify( data )\n        });\n    }\n}\n\nconst fetchConToken = ( endpoint, data, method = 'GET' ) => {\n\n    const url = `${ baseUrl }/${ endpoint }`;\n    const token = localStorage.getItem('token') || '';\n\n    if ( method === 'GET' ) {\n        return fetch( url, {\n            method,\n            headers: {\n                'x-token': token\n            }\n        });\n    } else {\n        return fetch( url, {\n            method,\n            headers: {\n                'Content-type': 'application/json',\n                'x-token': token\n            },\n            body: JSON.stringify( data )\n        });\n    }\n}\n\n\n\nexport {\n    fetchSinToken,\n    fetchConToken\n}","import moment from 'moment'\nexport const prepareEvents = (events = []) => {\n    return events.map(e =>\n    ({\n        ...e,\n        end: moment(e.end).toDate(),\n        start: moment(e.start).toDate()\n    })\n    );\n}","import Swal from \"sweetalert2\";\nimport { fetchConToken } from \"../helpers/fetch\";\nimport { prepareEvents } from \"../helpers/prepareEvents\";\nimport { types } from \"../types/types\";\n\n\nexport const eventStartAddNew = (event) => {\n    return async (dispatch, getState) => {\n\n        const { uid, name } = getState().auth\n        try {\n            const resp = await fetchConToken('events', event, 'POST');\n            const body = await resp.json();\n\n            if (body.ok) {\n                event.id = body.evento.id\n                event.user = {\n                    _id: uid,\n                    name: name\n                }\n                dispatch(eventAddNew(event));\n            }\n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n}\n\nconst eventAddNew = (event) => ({\n    type: types.eventAddNew,\n    payload: event\n});\n\nexport const eventSetActive = (event) => ({\n    type: types.eventSetActive,\n    payload: event\n});\n\nexport const eventClearActiveEvent = () => ({ type: types.eventClearActiveEvent });\n\nexport const eventStartUpdate = (event) => {\n    return async (dispatch) => {\n        try {\n            console.log(event);\n            const resp = await fetchConToken(`events/${event.id}`, event, 'PUT');\n            const body = await resp.json();\n            if (body.ok) {\n                dispatch(eventUpdated(event));\n            } else {\n                Swal.fire('Error', body.msg, 'error');\n            }\n        } catch (error) {\n            Swal.fire('error', error, 'error');\n        }\n\n    }\n}\n\nconst eventUpdated = (event) => ({\n    type: types.eventUpdated,\n    payload: event\n});\n\nexport const eventStartDeleted = () => {\n    return async (dispatch, getState) => {\n        const { id } = getState().calendar.activeEvent;\n        try {\n            const resp = await fetchConToken(`events/${id}`, {}, 'DELETE');\n            const body = await resp.json();\n            if (body.ok) {\n                dispatch(eventDeleted());\n            } else {\n                Swal.fire('Error', body.msg, 'error');\n            }\n        } catch (error) {\n            Swal.fire('error', error, 'error');\n        }\n    }\n}\n\nconst eventDeleted = () => ({ type: types.eventDeleted });\n\nexport const startLoading = () => {\n    return async (dispatch) => {\n\n        try {\n            const resp = await fetchConToken('events');\n            const body = await resp.json();\n            const events = prepareEvents(body.eventos)\n            dispatch(eventLoaded(events));\n        } catch (error) {\n            console.log(error);\n        }\n\n\n    }\n}\n\n\nconst eventLoaded = (events) => ({\n    type: types.eventLoaded,\n    payload: events\n})\n\n\nexport const eventLogout = () => ({\n    type: types.eventLogout\n})","import { fetchSinToken, fetchConToken } from '../helpers/fetch';\nimport { types } from '../types/types';\nimport Swal from 'sweetalert2';\nimport { eventLogout } from './events';\n\n\n\nexport const startLogin = (email, password) => {\n    return async (dispatch) => {\n\n        const resp = await fetchSinToken('auth', { email, password }, 'POST');\n        const body = await resp.json();\n\n        if (body.ok) {\n            localStorage.setItem('token', body.token);\n            localStorage.setItem('token-init-date', new Date().getTime());\n\n            dispatch(login({\n                uid: body.uid,\n                name: body.name\n            }))\n        } else {\n            Swal.fire('Error', body.msg, 'error');\n        }\n\n\n    }\n}\n\nexport const startRegister = (email, password, name) => {\n    return async (dispatch) => {\n\n        const resp = await fetchSinToken('auth/new', { email, password, name }, 'POST');\n        const body = await resp.json();\n\n        if (body.ok) {\n            localStorage.setItem('token', body.token);\n            localStorage.setItem('token-init-date', new Date().getTime());\n\n            dispatch(login({\n                uid: body.uid,\n                name: body.name\n            }))\n        } else {\n            Swal.fire('Error', body.msg, 'error');\n        }\n\n\n    }\n}\n\nexport const startChecking = () => {\n    return async (dispatch) => {\n\n        const resp = await fetchConToken('auth/renew');\n        const body = await resp.json();\n\n        if (body.ok) {\n            localStorage.setItem('token', body.token);\n            localStorage.setItem('token-init-date', new Date().getTime());\n\n            dispatch(login({\n                uid: body.uid,\n                name: body.name\n            }))\n        } else {\n            dispatch(checkingFinish());\n        }\n    }\n}\n\nconst checkingFinish = () => ({ type: types.authCheckingFinish });\n\n\n\nconst login = (user) => ({\n    type: types.authLogin,\n    payload: user\n});\n\n\nexport const startLogout = () => {\n    return (dispatch) => {\n\n        localStorage.clear();\n        dispatch(eventLogout());\n        dispatch(logout());\n    }\n}\n\nconst logout = () => ({ type: types.authLogout })","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useForm } from '../../hooks/useForm';\nimport { startLogin, startRegister } from '../../actions/auth';\nimport Swal from 'sweetalert2';\n\nimport './login.css';\n\nexport const LoginScreen = () => {\n\n    const dispatch = useDispatch();\n\n\n    const [formLoginValues, handleLoginInputChange] = useForm({\n        lEmail: 'ricardo@gmail.com',\n        lPassword: '123456'\n    });\n\n    const [formRegisterValues, handleRegisterInputChange] = useForm({\n        rName: 'Brayan',\n        rEmail: 'Brayan@gmail.com',\n        rPassword1: '123456',\n        rPassword2: '123456'\n    });\n\n    const { lEmail, lPassword } = formLoginValues;\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n        dispatch(startLogin(lEmail, lPassword));\n    }\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n\n        if (rPassword1 !== rPassword2) {\n            return Swal.fire('Error', 'Las contraseñas deben de ser iguales', 'error');\n        }\n        console.log('?')\n        dispatch(startRegister(rEmail, rPassword1, rName));\n    }\n\n\n    return (\n        <div className=\"container login-container\">\n            <div className=\"row\">\n                <div className=\"col-md-6 login-form-1\">\n                    <h3>Ingreso</h3>\n                    <form onSubmit={handleLogin}>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"lEmail\"\n                                value={lEmail}\n                                onChange={handleLoginInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\"\n                                name=\"lPassword\"\n                                value={lPassword}\n                                onChange={handleLoginInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Login\"\n                            />\n                        </div>\n                    </form>\n                </div>\n\n                <div className=\"col-md-6 login-form-2\">\n                    <h3>Registro</h3>\n                    <form onSubmit={handleRegister}>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Nombre\"\n                                name=\"rName\"\n                                value={rName}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"rEmail\"\n                                value={rEmail}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\"\n                                name=\"rPassword1\"\n                                value={rPassword1}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Repita la contraseña\"\n                                name=\"rPassword2\"\n                                value={rPassword2}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Crear cuenta\" />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { startLogout } from '../../actions/auth';\n\nexport const Navbar = () => {\n\n    const dispatch = useDispatch();\n    const { name } = useSelector( state => state.auth );\n\n    const handleLogout = () => {\n        dispatch( startLogout() );\n    }\n\n    return (\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\n            <span className=\"navbar-brand\">\n                { name }\n            </span>\n            \n            <button \n                className=\"btn btn-outline-danger\"\n                onClick={ handleLogout }\n            >\n                <i className=\"fas fa-sign-out-alt\"></i>\n                <span> Salir</span>\n            </button>\n\n        </div>\n    )\n}\n","export const messages = {\n    allDay: 'Todo el día',\n    previous: '<',\n    next: '>',\n    today: 'Hoy',\n    month: 'Mes',\n    week: 'Semana',\n    day: 'Día',\n    agenda: 'Agenda',\n    date: 'Fecha',\n    time: 'Hora',\n    event: 'Evento',\n    noEventsInRange: 'No hay eventos en este rango',\n    showMore: total => `+ Ver más (${total})`\n};","import React from 'react'\n\nexport const CalendarEvent = ({ event }) => {\n\n    const { title, user } = event;\n\n    return (\n        <div>\n            <strong> { title } </strong>\n            <span>- { user.name } </span>\n        </div>\n    )\n}\n","import { types } from '../types/types';\n\n\n\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport moment from 'moment';\nimport Modal from 'react-modal';\nimport DateTimePicker from 'react-datetime-picker';\nimport Swal from 'sweetalert2';\n\nimport { uiCloseModal } from '../../actions/ui';\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\n\n\nconst customStyles = {\n    content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)'\n    }\n};\nModal.setAppElement('#root');\n\nconst now = moment().minutes(0).seconds(0).add(1, 'hours'); // 3:00:00\nconst nowPlus1 = now.clone().add(1, 'hours');\n\nconst initEvent = {\n    title: '',\n    notes: '',\n    start: now.toDate(),\n    end: nowPlus1.toDate()\n}\n\n\nexport const CalendarModal = () => {\n\n    const { modalOpen } = useSelector(state => state.ui);\n    const { activeEvent } = useSelector(state => state.calendar);\n    const dispatch = useDispatch();\n\n    const [dateStart, setDateStart] = useState(now.toDate());\n    const [dateEnd, setDateEnd] = useState(nowPlus1.toDate());\n    const [titleValid, setTitleValid] = useState(true);\n\n    const [formValues, setFormValues] = useState(initEvent);\n\n    const { notes, title, start, end } = formValues;\n\n    useEffect(() => {\n        if (activeEvent) {\n            setFormValues(activeEvent);\n        } else {\n            setFormValues(initEvent);\n        }\n    }, [activeEvent, setFormValues])\n\n\n\n    const handleInputChange = ({ target }) => {\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        });\n    }\n\n\n    const closeModal = () => {\n        // TODO: cerrar el modal\n        dispatch(uiCloseModal());\n        dispatch(eventClearActiveEvent());\n        setFormValues(initEvent);\n    }\n\n    const handleStartDateChange = (e) => {\n        setDateStart(e);\n        setFormValues({\n            ...formValues,\n            start: e\n        })\n    }\n\n    const handleEndDateChange = (e) => {\n        setDateEnd(e);\n        setFormValues({\n            ...formValues,\n            end: e\n        })\n    }\n\n    const handleSubmitForm = (e) => {\n        e.preventDefault();\n\n        const momentStart = moment(start);\n        const momentEnd = moment(end);\n\n        if (momentStart.isSameOrAfter(momentEnd)) {\n            return Swal.fire('Error', 'La fecha fin debe de ser mayor a la fecha de inicio', 'error');\n        }\n\n        if (title.trim().length < 2) {\n            return setTitleValid(false);\n        }\n\n        if (activeEvent) {\n            dispatch(eventStartUpdate(formValues))\n        } else {\n            dispatch(eventStartAddNew(formValues));\n        }\n\n\n        setTitleValid(true);\n        closeModal();\n\n    }\n\n\n    return (\n        <Modal\n            isOpen={modalOpen}\n            onRequestClose={closeModal}\n            style={customStyles}\n            closeTimeoutMS={200}\n            className=\"modal\"\n            overlayClassName=\"modal-fondo\"\n        >\n            <h1> {(activeEvent) ? 'Editar evento' : 'Nuevo evento'} </h1>\n            <hr />\n            <form\n                className=\"container\"\n                onSubmit={handleSubmitForm}\n            >\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora inicio</label>\n                    <DateTimePicker\n                        onChange={handleStartDateChange}\n                        value={dateStart}\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora fin</label>\n                    <DateTimePicker\n                        onChange={handleEndDateChange}\n                        value={dateEnd}\n                        minDate={dateStart}\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <hr />\n                <div className=\"form-group\">\n                    <label>Titulo y notas</label>\n                    <input\n                        type=\"text\"\n                        className={`form-control ${!titleValid && 'is-invalid'} `}\n                        placeholder=\"Título del evento\"\n                        name=\"title\"\n                        autoComplete=\"off\"\n                        value={title}\n                        onChange={handleInputChange}\n                    />\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\n                </div>\n\n                <div className=\"form-group\">\n                    <textarea\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Notas\"\n                        rows=\"5\"\n                        name=\"notes\"\n                        value={notes}\n                        onChange={handleInputChange}\n                    ></textarea>\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\n                </div>\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-outline-primary btn-block\"\n                >\n                    <i className=\"far fa-save\"></i>\n                    <span> Guardar</span>\n                </button>\n\n            </form>\n\n        </Modal>\n    )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\n\nexport const AddNewFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleClickNew = () => {\n        dispatch( uiOpenModal() );\n    }\n\n\n    return (\n        <button\n            className=\"btn btn-primary fab\"\n            onClick={ handleClickNew }\n        >\n            <i className=\"fas fa-plus\"></i>\n        </button>\n    )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux'\nimport { eventStartDeleted } from '../../actions/events';\n\nexport const DeleteEventFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleDelete = () => {\n        dispatch(eventStartDeleted());\n    }\n\n    return (\n        <button\n            className=\"btn btn-danger fab-danger\"\n            onClick={handleDelete}\n        >\n            <i className=\"fas fa-trash\"></i>\n            <span> Borrar evento </span>\n        </button>\n    )\n}\n","import React, { useState } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\n\nimport { Navbar } from '../ui/Navbar';\nimport { messages } from '../../helpers/calendar-messages-es';\nimport { CalendarEvent } from './CalendarEvent';\nimport { CalendarModal } from './CalendarModal';\n\nimport { uiOpenModal } from '../../actions/ui';\n\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport 'moment/locale/es';\nimport { eventSetActive, eventClearActiveEvent, startLoading } from '../../actions/events';\nimport { AddNewFab } from '../ui/AddNewFab';\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\nimport { useEffect } from 'react';\n\nmoment.locale('es');\n\nconst localizer = momentLocalizer(moment);\n\nexport const CalendarScreen = () => {\n\n    const dispatch = useDispatch();\n    const { events, activeEvent } = useSelector(state => state.calendar);\n    const { uid } = useSelector(state => state.auth)\n\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\n\n    useEffect(() => {\n        dispatch(startLoading());\n    }, [dispatch]);\n\n\n    const onDoubleClick = (e) => {\n        // console.log(e);\n        dispatch(uiOpenModal());\n    }\n\n    const onSelectEvent = (e) => {\n        dispatch(eventSetActive(e));\n    }\n\n    const onViewChange = (e) => {\n        setLastView(e);\n        localStorage.setItem('lastView', e);\n    }\n\n    const onSelectSlot = (e) => {\n        // console.log(e)\n        dispatch(eventClearActiveEvent());\n    }\n\n\n    const eventStyleGetter = (event, start, end, isSelected) => {\n\n\n\n\n        const style = {\n            backgroundColor: (uid === event.user._id) ? '#367CF7' : '#465660',\n            borderRadius: '0px',\n            opacity: 0.8,\n            display: 'block',\n            color: 'white'\n        }\n\n\n        return {\n            style\n        }\n    };\n\n    return (\n        <div className=\"calendar-screen\">\n            <Navbar />\n\n\n            <Calendar\n                localizer={localizer}\n                events={events}\n                startAccessor=\"start\"\n                endAccessor=\"end\"\n                messages={messages}\n                eventPropGetter={eventStyleGetter}\n                onDoubleClickEvent={onDoubleClick}\n                onSelectEvent={onSelectEvent}\n                onView={onViewChange}\n                onSelectSlot={onSelectSlot}\n                selectable={true}\n                view={lastView}\n                components={{\n                    event: CalendarEvent\n                }}\n            />\n\n\n\n            <AddNewFab />\n\n\n            {\n                (activeEvent) && <DeleteEventFab />\n            }\n\n\n            <CalendarModal />\n\n\n\n        </div>\n    )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Redirect to=\"/\" /> )\n                    : ( <Component { ...props } /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/login\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React, { useEffect } from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect\n  } from 'react-router-dom';\n  \nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\nimport { startChecking } from '../actions/auth';\nimport { PublicRoute } from './PublicRoute';\nimport { PrivateRoute } from './PrivateRoute';\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n    const { checking, uid } = useSelector( state => state.auth);\n\n    useEffect(() => {\n        \n        dispatch( startChecking() );\n\n    }, [dispatch])\n\n    if ( checking ) {\n        return (<h5>Espere...</h5>);\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n\n                    <PublicRoute \n                        exact \n                        path=\"/login\" \n                        component={ LoginScreen }\n                        isAuthenticated={ !!uid }\n                    />\n\n                    <PrivateRoute \n                        exact \n                        path=\"/\" \n                        component={ CalendarScreen } \n                        isAuthenticated={ !!uid }\n                    />\n\n                    <Redirect to=\"/\" />   \n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { store } from './store/store';\nimport { AppRouter } from './router/AppRouter'\n\nexport const CalendarApp = () => {\n    return (\n        <Provider store={ store }>\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css';\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}